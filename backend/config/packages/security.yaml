security:
    password_hashers:
        app_hasher:
            id: 'App\Security\PasswordHasher'
        App\Entity\User:
            algorithm: auto
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/api/admin
            anonymous: true
            guard:
                authenticators:
                    - App\Security\AppAuthenticator
            logout:
                path: app_logout
        login:
            pattern:  ^/api/authentication-token
            anonymous: true
            json_login:
                check_path: /api/authentication-token
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern: ^/api
            stateless: true
            anonymous: true
            provider: app_user_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator




            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/admin/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/register$, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/reset$, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/chart, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/grid/, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/quote, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/ticker, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/co/, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/reset-password, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/payment/capture, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/payment/notify, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/admin, role: ROLE_ADMIN }
        - { path: "api/docs", role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
