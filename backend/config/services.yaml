imports:
    - { resource: services/commands.yml }
    - { resource: services/filters.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']
    App\Service\OldPremiumServiceProcessor:
        public: true
        tags:
            - { name: service_processor, alias: old_premium }
    App\Service\PremiumServiceProcessor:
        public: true
        tags:
            - { name: service_processor, alias: premium }
    App\EventListener\OwnerListener:
        tags:
            - { name: doctrine.event_listener, event: prePersist }
    api.event.authentication_success_listener:
        class: App\EventListener\AuthenticationSuccessListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }
#    Redis:
#        class: Redis
#        calls:
#            - method: connect
#              arguments:
#                  - '127.0.0.1'
#                  - '6379'
#            # If you need key prefix, uncomment line belows
#            # - method: setOption
#            #   arguments:
#            #       - !php/const Redis::OPT_PREFIX
#            #       - 'my_prefix'
#
#    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
#        arguments:
#            - '@Redis'
    Payum\Bundle\PayumBundle\Controller\AuthorizeController:
        calls:
            - method: setContainer
              arguments: ['@service_container']
    Payum\Bundle\PayumBundle\Controller\CancelController:
        calls:
            - method: setContainer
              arguments: ['@service_container']
    Payum\Bundle\PayumBundle\Controller\CaptureController:
        calls:
            - method: setContainer
              arguments: ['@service_container']
    Payum\Bundle\PayumBundle\Controller\NotifyController:
        calls:
            - method: setContainer
              arguments: ['@service_container']
    Payum\Bundle\PayumBundle\Controller\PayoutController:
        calls:
            - method: setContainer
              arguments: ['@service_container']
    Payum\Bundle\PayumBundle\Controller\RefundController:
        calls:
            - method: setContainer
              arguments: ['@service_container']
    Payum\Bundle\PayumBundle\Controller\SyncController:
        calls:
            - method: setContainer
              arguments: ['@service_container']
    Dentiman\PaymentBundle\Controller\PaymentController:
        calls:
            - method: setContainer
              arguments: ['@service_container']
    Dentiman\ScheduleBundle\Controller\RunCommandController:

    App\EventListener\JWTListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_decoded, method: onJWTDecoded }
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }
    App\EventListener\UserPersistSubscriber:
        tags:
            - { name: doctrine.event_listener, event: prePersist, method: prePersist }
    App\Swagger\SwaggerDecorator:
        decorates: 'api_platform.swagger.normalizer.documentation'
        arguments: ['@App\Swagger\SwaggerDecorator.inner']
        autoconfigure: false
